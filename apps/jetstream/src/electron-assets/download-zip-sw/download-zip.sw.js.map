{"version":3,"file":"download-zip.sw.js","mappings":"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","sources":["webpack:///./src/environments/environment.ts","webpack:///./src/app/Logger.ts","webpack:///./src/app/Crc32.ts","webpack:///./src/app/ZipUtils.ts","webpack:///./src/app/Zip.ts","webpack:///./src/main.sw.ts"],"sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// When building for production, this file is replaced with `environment.prod.ts`.\n\nexport const environment = {\n  production: false,\n};\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport { environment } from '../environments/environment';\n\nconst DEBUG = !environment.production;\ninterface Logger {\n  isEnabled: boolean;\n  log: (...args: any[]) => void;\n  error: (...args: any[]) => void;\n}\n\nexport const logger: Logger = {\n  isEnabled: false,\n  log: () => {},\n  error: () => {},\n};\n\nif (DEBUG) {\n  logger.log = console.log.bind(console, '%c DEBUG', 'color: blue; font-weight: bold;');\n  logger.error = console.error.bind(console, '%c ERROR', 'font-weight: bold;');\n}\n","// Based on https://github.com/jimmywarting/StreamSaver.js/blob/aaf2301af41ef14371b80d62c2adaf076d5878cb/examples/zip-stream.js\r\n// and https://github.com/NuSkooler/enigma-bbs/blob/0.0.9-alpha/core/crc.js\r\n\r\nclass Crc32 {\r\n  crc: number;\r\n  table: Int32Array;\r\n\r\n  constructor() {\r\n    this.crc = -1;\r\n    this.table = new Int32Array([\r\n      0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4, 0xe0d5e91e,\r\n      0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb,\r\n      0xf4d4b551, 0x83d385c7, 0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5, 0x3b6e20c8,\r\n      0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940,\r\n      0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59, 0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599,\r\n      0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x01db7106,\r\n      0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433, 0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb,\r\n      0x086d3d2d, 0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\r\n      0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65, 0x4db26158, 0x3ab551ce, 0xa3bc0074,\r\n      0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5,\r\n      0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f, 0x5edef90e,\r\n      0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a,\r\n      0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683, 0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27,\r\n      0x7d079eb1, 0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0,\r\n      0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1,\r\n      0xa6bc5767, 0x3fb506dd, 0x48b2364b, 0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\r\n      0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92,\r\n      0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d, 0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f,\r\n      0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4,\r\n      0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777, 0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c,\r\n      0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d,\r\n      0x3e6e77db, 0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9, 0xbdbdf21c, 0xcabac28a,\r\n      0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37,\r\n      0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,\r\n    ]);\r\n  }\r\n\r\n  append = (data) => {\r\n    for (let offset = 0; offset < data.length; offset++) {\r\n      this.crc = (this.crc >>> 8) ^ this.table[(this.crc ^ data[offset]) & 0xff];\r\n    }\r\n  };\r\n\r\n  get = () => {\r\n    return (this.crc ^ -1) >>> 0;\r\n  };\r\n}\r\n\r\nexport default Crc32;\r\n","import { logger } from './Logger';\r\n\r\nconst LITTLE_ENDIAN = true;\r\n\r\nclass ZipUtils {\r\n  // Data is an array in the format: [{data: 0x0000, size: 2} or {data: Buffer()}, ...]\r\n  createByteArray = (data) => {\r\n    const size = data.reduce((acc, value) => {\r\n      return acc + (value.size ? value.size : value.data.length);\r\n    }, 0);\r\n    const array = new Uint8Array(size);\r\n    const dataView = new DataView(array.buffer);\r\n\r\n    let i = 0;\r\n    data.forEach((entry) => {\r\n      if (entry.data.length !== undefined) {\r\n        // Entry data is some kind of buffer / array\r\n        array.set(entry.data, i);\r\n        i += entry.data.length;\r\n      } else {\r\n        // Entry data is some kind of integer\r\n        switch (entry.size) {\r\n          case 1:\r\n            dataView.setInt8(i, parseInt(entry.data));\r\n            break;\r\n          case 2:\r\n            dataView.setInt16(i, parseInt(entry.data), LITTLE_ENDIAN);\r\n            break;\r\n          case 4:\r\n            dataView.setInt32(i, parseInt(entry.data), LITTLE_ENDIAN);\r\n            break;\r\n          case 8:\r\n            dataView.setBigInt64(i, BigInt(entry.data), LITTLE_ENDIAN);\r\n            break;\r\n          default: {\r\n            const error = `createByteArray: No handler defined for data size ${entry.size} of entry data ${JSON.stringify(entry.data)}`;\r\n            logger.error(error);\r\n            throw error;\r\n          }\r\n        }\r\n        i += entry.size;\r\n      }\r\n    });\r\n    return array;\r\n  };\r\n\r\n  calculateSize = (files) => {\r\n    const localHeaderSizeBig = (file) => BigInt(30 + file.name.length);\r\n    const dataDescriptorSizeBig = BigInt(12);\r\n    const centralDirectoryHeaderSizeBig = (file) => BigInt(46 + file.name.length);\r\n    const endOfCentralDirectorySizeBig = BigInt(22);\r\n    const zip64ExtraFieldSizeBig = BigInt(32);\r\n    const zip64DataDescriptorSizeBig = BigInt(20);\r\n    const zip64EndOfCentralDirectoryRecordSizeBig = BigInt(56);\r\n    const zip64EndOfCentralDirectoryLocatorSizeBig = BigInt(20);\r\n\r\n    let totalSizeBig = files.reduce((acc, val) => {\r\n      return acc + localHeaderSizeBig(val) + BigInt(val.size) + dataDescriptorSizeBig + centralDirectoryHeaderSizeBig(val);\r\n    }, BigInt(0));\r\n    totalSizeBig += endOfCentralDirectorySizeBig;\r\n\r\n    if (totalSizeBig >= BigInt('0xFFFFFFFF')) {\r\n      // We have a ZIP64! Add all the data we missed before\r\n      totalSizeBig = files.reduce((acc, val) => {\r\n        return acc + zip64ExtraFieldSizeBig + (zip64DataDescriptorSizeBig - dataDescriptorSizeBig) + zip64ExtraFieldSizeBig;\r\n      }, totalSizeBig);\r\n      totalSizeBig += zip64EndOfCentralDirectoryRecordSizeBig;\r\n      totalSizeBig += zip64EndOfCentralDirectoryLocatorSizeBig;\r\n    }\r\n\r\n    return totalSizeBig;\r\n  };\r\n\r\n  getTimeStruct = (date) => {\r\n    return (((date.getHours() << 6) | date.getMinutes()) << 5) | (date.getSeconds() / 2);\r\n  };\r\n\r\n  getDateStruct = (date) => {\r\n    return ((((date.getFullYear() - 1980) << 4) | (date.getMonth() + 1)) << 5) | date.getDate();\r\n  };\r\n}\r\n\r\nconst staticZipUtils = new ZipUtils();\r\nexport default staticZipUtils;\r\n","// Based on the implementation specified in: https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT\r\nimport Crc32 from './Crc32';\r\nimport { logger } from './Logger';\r\nimport ZipUtils from './ZipUtils';\r\n\r\n// Polyfill ReadableStream if not in browser\r\n// eslint-disable-next-line @typescript-eslint/no-var-requires\r\nconst ReadableStreamLocal = ReadableStream;\r\n\r\nclass Zip {\r\n  zip64: boolean;\r\n  fileRecord: {\r\n    name: string;\r\n    sizeBig: bigint;\r\n    crc: Crc32;\r\n    done: boolean;\r\n    date: Date;\r\n    headerOffsetBig: bigint;\r\n  }[];\r\n  finished: boolean;\r\n  byteCounterBig: bigint;\r\n  outputStream: any;\r\n  outputController: ReadableStreamController<any>;\r\n  constructor(zip64) {\r\n    // Enable large zip compatibility?\r\n    this.zip64 = zip64;\r\n    logger.log(`[SW] Started zip with zip64: ${this.zip64}`);\r\n\r\n    // Setup file record\r\n    this.fileRecord = [];\r\n    this.finished = false;\r\n\r\n    // Setup byte counter\r\n    this.byteCounterBig = BigInt(0);\r\n\r\n    // Setup output stream\r\n    this.outputStream = new ReadableStreamLocal({\r\n      start: (controller) => {\r\n        logger.log('[SW] OutputStream has started');\r\n        this.outputController = controller;\r\n      },\r\n      cancel: () => {\r\n        logger.error('[SW] OutputStream has been canceled');\r\n      },\r\n      // read: () => {}, // was not on type declaration\r\n    });\r\n  }\r\n\r\n  // To also work with the node version of readable stream (for testing)\r\n  enqueue = (data) => {\r\n    this.outputController ? this.outputController.enqueue(data) : this.outputStream.push(data);\r\n  };\r\n\r\n  close = () => {\r\n    this.outputController ? this.outputController.close() : this.outputStream.destroy();\r\n  };\r\n\r\n  // Generators\r\n  getZip64ExtraField = (fileSizeBig, localFileHeaderOffsetBig) => {\r\n    return ZipUtils.createByteArray([\r\n      { data: 0x0001, size: 2 },\r\n      { data: 28, size: 2 },\r\n      { data: fileSizeBig, size: 8 },\r\n      { data: fileSizeBig, size: 8 },\r\n      { data: localFileHeaderOffsetBig, size: 8 },\r\n      { data: 0, size: 4 },\r\n    ]);\r\n  };\r\n\r\n  isWritingFile = () => this.fileRecord.length > 0 && this.fileRecord[this.fileRecord.length - 1].done === false;\r\n\r\n  // API\r\n  startFile = (fileName) => {\r\n    if (!this.isWritingFile() && !this.finished) {\r\n      logger.log(`Start file: ${fileName}`);\r\n      const date = new Date(Date.now());\r\n\r\n      // Add file to record\r\n      this.fileRecord = [\r\n        ...this.fileRecord,\r\n        {\r\n          name: fileName,\r\n          sizeBig: BigInt(0),\r\n          crc: new Crc32(),\r\n          done: false,\r\n          date,\r\n          headerOffsetBig: this.byteCounterBig,\r\n        },\r\n      ];\r\n\r\n      // Generate Local File Header\r\n      const nameBuffer = new TextEncoder().encode(fileName);\r\n      const header = ZipUtils.createByteArray([\r\n        { data: 0x04034b50, size: 4 },\r\n        { data: 0x002d, size: 2 },\r\n        { data: 0x0808, size: 2 },\r\n        { data: 0x0000, size: 2 },\r\n        { data: ZipUtils.getTimeStruct(date), size: 2 },\r\n        { data: ZipUtils.getDateStruct(date), size: 2 },\r\n        { data: 0x00000000, size: 4 },\r\n        { data: this.zip64 ? 0xffffffff : 0x00000000, size: 4 },\r\n        { data: this.zip64 ? 0xffffffff : 0x00000000, size: 4 },\r\n        { data: nameBuffer.length, size: 2 },\r\n        { data: this.zip64 ? 32 : 0, size: 2 },\r\n        { data: nameBuffer },\r\n        { data: this.zip64 ? this.getZip64ExtraField(BigInt(0), this.byteCounterBig) : [] },\r\n      ]);\r\n\r\n      // Write header to output stream and add to byte counter\r\n      this.enqueue(header);\r\n      this.byteCounterBig += BigInt(header.length);\r\n    } else {\r\n      logger.error('Tried adding file while adding other file or while zip has finished');\r\n    }\r\n  };\r\n\r\n  appendData = (data) => {\r\n    try {\r\n      if (this.isWritingFile() && !this.finished) {\r\n        // Write data to output stream, add to CRC and increment the file and global size counters\r\n        this.enqueue(data);\r\n        this.byteCounterBig += BigInt(data.length);\r\n        this.fileRecord[this.fileRecord.length - 1].crc.append(data);\r\n        this.fileRecord[this.fileRecord.length - 1].sizeBig += BigInt(data.length);\r\n      } else {\r\n        logger.error('Tried to append file data, but there is no open file!');\r\n      }\r\n    } catch (e) {\r\n      logger.error(e);\r\n    }\r\n  };\r\n\r\n  endFile = () => {\r\n    try {\r\n      if (this.isWritingFile() && !this.finished) {\r\n        const file = this.fileRecord[this.fileRecord.length - 1];\r\n        logger.log(`End file: ${file.name}`);\r\n        const dataDescriptor = ZipUtils.createByteArray([\r\n          { data: file.crc.get(), size: 4 },\r\n          { data: file.sizeBig, size: this.zip64 ? 8 : 4 },\r\n          { data: file.sizeBig, size: this.zip64 ? 8 : 4 },\r\n        ]);\r\n        this.enqueue(dataDescriptor);\r\n        this.byteCounterBig += BigInt(dataDescriptor.length);\r\n        this.fileRecord[this.fileRecord.length - 1].done = true;\r\n      } else {\r\n        logger.error('Tried to end file, but there is no open file!');\r\n      }\r\n    } catch (e) {\r\n      logger.error(e);\r\n    }\r\n  };\r\n\r\n  finish = () => {\r\n    if (!this.isWritingFile() && !this.finished) {\r\n      logger.log(`Finishing zip`);\r\n      // Write central directory headers\r\n      let centralDirectorySizeBig = BigInt(0);\r\n      const centralDirectoryStartBig = this.byteCounterBig;\r\n      this.fileRecord.forEach((file) => {\r\n        const { date, crc, sizeBig, name, headerOffsetBig } = file;\r\n        const nameBuffer = new TextEncoder().encode(name);\r\n        const header = ZipUtils.createByteArray([\r\n          { data: 0x02014b50, size: 4 },\r\n          { data: 0x002d, size: 2 },\r\n          { data: 0x002d, size: 2 },\r\n          { data: 0x0808, size: 2 },\r\n          { data: 0x0000, size: 2 },\r\n          { data: ZipUtils.getTimeStruct(date), size: 2 },\r\n          { data: ZipUtils.getDateStruct(date), size: 2 },\r\n          { data: crc.get(), size: 4 },\r\n          { data: this.zip64 ? 0xffffffff : sizeBig, size: 4 },\r\n          { data: this.zip64 ? 0xffffffff : sizeBig, size: 4 },\r\n          { data: nameBuffer.length, size: 2 },\r\n          { data: this.zip64 ? 32 : 0, size: 2 },\r\n          { data: 0x0000, size: 2 },\r\n          { data: 0x0000, size: 2 },\r\n          { data: 0x0000, size: 2 },\r\n          { data: 0x00000000, size: 4 },\r\n          { data: this.zip64 ? 0xffffffff : headerOffsetBig, size: 4 },\r\n          { data: nameBuffer },\r\n          { data: this.zip64 ? this.getZip64ExtraField(sizeBig, headerOffsetBig) : [] },\r\n        ]);\r\n        this.enqueue(header);\r\n        this.byteCounterBig += BigInt(header.length);\r\n        centralDirectorySizeBig += BigInt(header.length);\r\n      });\r\n\r\n      if (this.zip64) {\r\n        // Write zip64 end of central directory record\r\n        const zip64EndOfCentralDirectoryRecordStartBig = this.byteCounterBig;\r\n        const zip64EndOfCentralDirectoryRecord = ZipUtils.createByteArray([\r\n          { data: 0x06064b50, size: 4 },\r\n          { data: 44, size: 8 },\r\n          { data: 0x002d, size: 2 },\r\n          { data: 0x002d, size: 2 },\r\n          { data: 0, size: 4 },\r\n          { data: 0, size: 4 },\r\n          { data: this.fileRecord.length, size: 8 },\r\n          { data: this.fileRecord.length, size: 8 },\r\n          { data: centralDirectorySizeBig, size: 8 },\r\n          { data: centralDirectoryStartBig, size: 8 },\r\n        ]);\r\n        this.enqueue(zip64EndOfCentralDirectoryRecord);\r\n        this.byteCounterBig += BigInt(zip64EndOfCentralDirectoryRecord.length);\r\n\r\n        // Write zip64 end of central directory locator\r\n        const zip64EndOfCentralDirectoryLocator = ZipUtils.createByteArray([\r\n          { data: 0x07064b50, size: 4 },\r\n          { data: 0, size: 4 },\r\n          { data: zip64EndOfCentralDirectoryRecordStartBig, size: 8 },\r\n          { data: 1, size: 4 },\r\n        ]);\r\n        this.enqueue(zip64EndOfCentralDirectoryLocator);\r\n        this.byteCounterBig += BigInt(zip64EndOfCentralDirectoryLocator.length);\r\n      }\r\n\r\n      const endOfCentralDirectoryRecord = ZipUtils.createByteArray([\r\n        { data: 0x06054b50, size: 4 },\r\n        { data: 0, size: 2 },\r\n        { data: 0, size: 2 },\r\n        { data: this.zip64 ? 0xffff : this.fileRecord.length, size: 2 },\r\n        { data: this.zip64 ? 0xffff : this.fileRecord.length, size: 2 },\r\n        { data: this.zip64 ? 0xffffffff : centralDirectorySizeBig, size: 4 },\r\n        { data: this.zip64 ? 0xffffffff : centralDirectoryStartBig, size: 4 },\r\n        { data: 0, size: 2 },\r\n      ]);\r\n      this.enqueue(endOfCentralDirectoryRecord);\r\n      this.close();\r\n      this.byteCounterBig += BigInt(endOfCentralDirectoryRecord.length);\r\n\r\n      this.finished = true;\r\n      logger.log(`Done writing zip file. Wrote ${this.fileRecord.length} files and a total of ${this.byteCounterBig} bytes.`);\r\n    } else {\r\n      logger.error('Empty zip, or there is still a file open');\r\n    }\r\n  };\r\n}\r\n\r\nexport default Zip;\r\n","/**\nMIT License\n\nCopyright (c) 2019 robbederks\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\nhttps://github.com/robbederks/downzip\n(NOTE: this was heavily modified)\n */\nimport { logger } from './app/Logger';\nimport Zip from './app/Zip';\nimport ZipUtils from './app/ZipUtils';\n\ndeclare const self: ServiceWorkerGlobalScope;\n\ninterface DownZipFile {\n  name: string;\n  downloadUrl: string;\n  size: number;\n}\n\n// /////////// GLOBAL OBJECTS /////////// //\nconst zipMap: Map<\n  string,\n  {\n    files: DownZipFile[];\n    name: string;\n    zip: Zip;\n    sizeBig: BigInt;\n  }\n> = new Map();\n\n// COMMANDS\nconst ACKNOWLEDGE = 'ACKNOWLEDGE';\nconst ACTIVE_DOWNLOADS = 'ACTIVE_DOWNLOADS';\n\n//////// MESSAGE HANDLERS\nconst initialize = (data: any, ports: readonly MessagePort[]) => {\n  logger.log('[SW]', `Initialize`, { data });\n  const { id, files, name } = data;\n\n  // Decide whether to use zip64\n  const totalSizeBig = ZipUtils.calculateSize(files);\n  logger.log('[SW]', `Total estimated file size: ${totalSizeBig}`);\n  const zip64 = totalSizeBig >= BigInt('0xFFFFFFFF');\n\n  // Start new Zip object and add to the map\n  zipMap.set(id, { files, name, zip: new Zip(zip64), sizeBig: totalSizeBig });\n\n  // Acknowledge reception\n  if (ports.length > 0) {\n    ports[0].postMessage({ command: ACKNOWLEDGE });\n  }\n};\n\n// This message is here to keep the service worker from getting killed while downloading.\nconst tick = (data: any, ports: readonly MessagePort[]) => {\n  logger.log('[SW]', `Tock`);\n  if (ports.length > 0) {\n    ports[0].postMessage({ command: ACTIVE_DOWNLOADS, activeIds: Array.from(zipMap.keys()) });\n  }\n};\n\nconst messageHandlers = {\n  INITIALIZE: initialize,\n  TICK: tick,\n};\n\n// /////////// EVENT HANDLERS /////////// //\nself.addEventListener('install', () => {\n  logger.log('[SW]', 'Installing worker and skip waiting');\n  self.skipWaiting();\n});\n\nself.addEventListener('activate', () => {\n  logger.log('[SW]', 'Activating worker and skip waiting');\n  self.skipWaiting();\n  self.clients.claim();\n});\n\n/**\n * INTERCEPT FETCH EVENTS\n */\nself.addEventListener('fetch', async (event) => {\n  // Get URL and check if it is a download request\n  const urlParts = event.request.url.split('/');\n  const lastPart = urlParts[urlParts.length - 1];\n  if (lastPart.includes('download-')) {\n    // Get download id\n    const id = lastPart.replace('download-', '');\n    logger.log('[SW]', `Fetch called for download id: ${id}`);\n\n    // Check if initialized\n    if (!zipMap.has(id)) {\n      logger.error('[SW][ERROR]', `No zip initialized for id: ${id}`);\n      return;\n    }\n\n    // Respond with the zip outputStream\n    event.respondWith(\n      new Response(zipMap.get(id).zip.outputStream, {\n        headers: new Headers({\n          'Content-Type': 'application/octet-stream; charset=utf-8',\n          'Content-Disposition': `attachment; filename=\"${zipMap.get(id).name}.zip\"`,\n          'Content-Length': zipMap.get(id).sizeBig.toString(), // This is an approximation, does not take into account the headers\n        }),\n      })\n    );\n\n    // Start feeding zip the downloads\n    for (const file of zipMap.get(id).files) {\n      // Start new file in the zip\n      zipMap.get(id).zip.startFile(file.name);\n\n      // Append all the downloaded data\n      try {\n        await new Promise<void>((resolve, reject) => {\n          fetch(file.downloadUrl)\n            .then((response) => response.body)\n            .then(async (stream) => {\n              const reader = stream.getReader();\n              let doneReading = false;\n              while (!doneReading) {\n                const chunk = await reader.read();\n                const { done, value } = chunk;\n\n                if (done) {\n                  // If this stream has finished, resolve and return\n                  resolve();\n                  doneReading = true;\n                } else {\n                  // If not, append data to the zip\n                  zipMap.get(id).zip.appendData(value);\n                }\n              }\n            })\n            .catch((err) => {\n              reject(err);\n            });\n        });\n      } catch (ex) {\n        logger.error('[SW][ERROR]', `Error while piping data into zip: ${ex.message}`);\n      }\n\n      // End file\n      zipMap.get(id).zip.endFile();\n    }\n\n    // End zip\n    zipMap.get(id).zip.finish();\n    zipMap.delete(id);\n    logger.log('[SW]', 'Done with zip', id);\n  } else {\n    logger.log('[SW]', 'Fetch called for a non-download. Doing nothing');\n  }\n});\n\nself.addEventListener('error', (event) => {\n  logger.log('[SW]', `Error: ${event.message} at line number: ${event.lineno}. Handling URL ${event.filename}`);\n  return true;\n});\n\nself.addEventListener('message', async (event) => {\n  const { data, ports } = event;\n  const handler = messageHandlers[data.command];\n  if (handler) {\n    await handler(data.data, ports);\n  } else {\n    logger.error('[SW][ERROR]', `Handler for command does not exist: ${data.command}`);\n  }\n});\n"],"names":["logger","isEnabled","log","error","console","bind","constructor","crc","table","append","data","offset","length","this","get","Int32Array","LITTLE_ENDIAN","createByteArray","size","reduce","acc","value","array","Uint8Array","dataView","DataView","buffer","i","forEach","entry","undefined","set","setInt8","parseInt","setInt16","setInt32","setBigInt64","BigInt","JSON","stringify","calculateSize","files","dataDescriptorSizeBig","endOfCentralDirectorySizeBig","zip64ExtraFieldSizeBig","zip64DataDescriptorSizeBig","zip64EndOfCentralDirectoryRecordSizeBig","zip64EndOfCentralDirectoryLocatorSizeBig","totalSizeBig","val","name","file","centralDirectoryHeaderSizeBig","getTimeStruct","date","getHours","getMinutes","getSeconds","getDateStruct","getFullYear","getMonth","getDate","ReadableStreamLocal","ReadableStream","zip64","fileRecord","finished","byteCounterBig","outputStream","outputController","enqueue","push","close","destroy","getZip64ExtraField","fileSizeBig","localFileHeaderOffsetBig","ZipUtils","isWritingFile","done","startFile","fileName","Date","now","sizeBig","Crc32","headerOffsetBig","nameBuffer","TextEncoder","encode","header","appendData","e","endFile","dataDescriptor","finish","centralDirectorySizeBig","centralDirectoryStartBig","zip64EndOfCentralDirectoryRecordStartBig","zip64EndOfCentralDirectoryRecord","zip64EndOfCentralDirectoryLocator","endOfCentralDirectoryRecord","start","controller","cancel","zipMap","Map","messageHandlers","INITIALIZE","ports","id","zip","Zip","postMessage","command","TICK","activeIds","Array","from","keys","self","addEventListener","skipWaiting","clients","claim","async","urlParts","event","request","url","split","lastPart","includes","replace","has","respondWith","Response","headers","Headers","toString","Promise","resolve","reject","fetch","downloadUrl","then","response","body","reader","stream","getReader","doneReading","chunk","read","catch","err","ex","message","delete","lineno","filename","handler"],"sourceRoot":""}